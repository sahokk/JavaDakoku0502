package db_control;

import static db_control.DbControl.sqlCon;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import utility.DbColumns;

public abstract class DbControl {
	private String colmunsName;
	private static Connection sqlCon = null;
	private PreparedStatement sqlStmt = null;
	private ResultSet res = null;

	private static final String sqlUserID = "testuser";
	private static final String sqlPassword = "giken2";
	private static final String dbUrl = "jdbc:mysql://localhost:3306/db_giken2";

	private static boolean flagLogin;

	public DbControl() {
		flagLogin = false;
	}

	protected static void connectDB() {
		try {
			sqlCon = DriverManager.getConnection(dbUrl, sqlUserID, sqlPassword);
			System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	protected static void closeDB(ResultSet res, PreparedStatement stmt, Connection con) {
		try {
			if (res != null) {
				res.close();
			}
			if (stmt != null) {
				stmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	protected String getInfo(DbColumns columns, String tableName) {
		String sql = "SELECT ? FROM " + tableName + ";";
		colmunsName = columns.getValue();
		try {
			sqlStmt = sqlCon.prepareStatement(sql);
			sqlStmt.setString(1, colmunsName);
			res = sqlStmt.executeQuery();
			if (res.next()) {
				return res.getString(colmunsName);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closeDB(res, sqlStmt, sqlCon);
		}
		return null;
	}

	protected void setInfo(String loginId, String loginPass, String tableName) {
		String sql = "INSERT INTO " + tableName + " values (?, ?);";
		try {
			sqlStmt = sqlCon.prepareStatement(sql);
			sqlStmt.setString(1, DbColumns.LOGIN_ID.getValue());
			sqlStmt.setString(2, DbColumns.LOGIN_PASS.getValue());
			int no = sqlStmt.executeUpdate();
			if (no == 1) {
//				登録完了
			} else {
//				登録失敗
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closeDB(res, sqlStmt, sqlCon);
		}
	}

	protected abstract void updateInfo(String loginId, String loginPass);

}
