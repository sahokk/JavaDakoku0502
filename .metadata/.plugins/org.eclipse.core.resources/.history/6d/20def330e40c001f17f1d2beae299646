package dakoku;

import org.openqa.selenium.By;

import sys.WebControl;
import utility.Dakokustate;

public abstract class Dakoku extends WebControl {
	private String dakokuUrl;
	private By dakokuButtonIn, dakokuButtonOut, dakokuListButton;

	public Dakoku(String dakokuUrl, By dakokuButtonIn, By dakokuButtonOut, By dakokuListButton) {
		super();
		this.dakokuUrl = dakokuUrl;
		this.dakokuButtonIn = dakokuButtonIn;
		this.dakokuButtonOut = dakokuButtonOut;
		this.dakokuListButton = dakokuListButton;
	}

	private void accessDakokuPage() {
		getDriver().get(dakokuUrl);
	}

	private void pushDakokuButtonIn() {
		getDriver().findElement(dakokuButtonIn).click();
	}

	private void pushDakokuButtonOut() {
		getDriver().findElement(dakokuButtonOut).click();
	}

	public void dakoku(Dakokustate dakokustate) {
		this.accessDakokuPage();
		switch (dakokustate) {
		case IN: {

			this.pushDakokuButtonIn();
		}
		case OUT: {
			this.pushDakokuButtonOut();
		}
		default:
			throw new IllegalArgumentException("Unexpected value: " + dakokustate);
		}
	}

}
